{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { createContext, useState } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from \"../../src/BancoNoSql/conexaoFirebase\";\nimport { db } from \"../../src/BancoNoSql/conexaoFirebase\";\nimport { ref, set, onValue, update } from 'firebase/database';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var AuthContext = createContext({});\n\nfunction AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      AvaliarGp = _useState4[0],\n      setAvaliarGp = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pontosTeste = _useState6[0],\n      setPontosTeste = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      grupoCorrent = _useState8[0],\n      setGrupoCorrent = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      alunoCorrent = _useState10[0],\n      setAlunoCorrent = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      nomeGBavaliar = _useState12[0],\n      setNomeGBavaliar = _useState12[1];\n\n  var navigation = useNavigation();\n\n  function login(email, password) {\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(signInWithEmailAndPassword(auth, email, password).then(function (value) {\n              alert('loguin com sucesso!');\n              setUser({\n                userId: value.user.uid,\n                email: email\n              });\n              navigation.navigate('PainelControle');\n            }).catch(function (error) {\n              console.log(error);\n              var strr = error;\n\n              if (strr == \"FirebaseError: Firebase: Error (auth/wrong-password).\") {\n                alert(\"senha incorreta\");\n              }\n\n              if (strr == \"FirebaseError: Firebase: Error (auth/user-not-found).\") {\n                alert(\"E-mail não cadastrado!\");\n                setUser({\n                  erroSenha: 'erro email'\n                });\n              }\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function guardaVariaveisCorrent(alunoRef, nomegrupo) {\n    setAlunoCorrent(alunoRef);\n    setGrupoCorrent(nomegrupo);\n  }\n\n  function guardaGrupo(nomegrupo) {\n    setNomeGBavaliar(nomegrupo);\n  }\n\n  function avaliartruefalse(valor) {\n    if (valor == true) setAvaliarGp(true);else setAvaliarGp(false);\n  }\n\n  function teste() {\n    setPontosTeste(pontosTeste + 1);\n  }\n\n  function enviaResultadoBancoT1() {\n    var alunoVal = alunoCorrent;\n    console.log(\"aluno corrent \" + alunoCorrent);\n    update(ref(db, user.userId + '/' + grupoCorrent + alunoVal), {\n      teste1: pontosTeste\n    }).then(function () {\n      alert(\"nota registrada!\");\n      setPontosTeste(1);\n    }).catch(function (error) {\n      alert(error.message);\n      alert(\"falhou nota\");\n    });\n  }\n\n  function enviaResultadoBancoT2() {\n    var alunoVal = alunoCorrent;\n    console.log(\"aluno corrent \" + alunoCorrent);\n    update(ref(db, user.userId + '/' + grupoCorrent + alunoVal), {\n      teste2: pontosTeste\n    }).then(function () {\n      alert(\"nota registrada!\");\n      setPontosTeste(1);\n    }).catch(function (error) {\n      alert(error.message);\n      alert(\"falhou nota\");\n    });\n  }\n\n  function enviaResultadoBancoT3() {\n    var alunoVal = alunoCorrent;\n    console.log(\"aluno corrent \" + alunoCorrent);\n    update(ref(db, user.userId + '/' + grupoCorrent + alunoVal), {\n      teste3: pontosTeste\n    }).then(function () {\n      alert(\"nota registrada!\");\n      setPontosTeste(1);\n    }).catch(function (error) {\n      alert(error.message);\n      alert(\"falhou nota\");\n    });\n  }\n\n  function enviaResultadoBancoT4() {\n    var alunoVal = alunoCorrent;\n    console.log(\"aluno corrent \" + alunoCorrent);\n    update(ref(db, user.userId + '/' + grupoCorrent + alunoVal), {\n      teste4: pontosTeste,\n      avaliado: true\n    }).then(function () {\n      alert(\"nota registrada!\");\n      setPontosTeste(1);\n      avaliartruefalse(true);\n    }).catch(function (error) {\n      alert(error.message);\n      alert(\"falhou nota\");\n    });\n  }\n\n  return _jsx(AuthContext.Provider, {\n    value: {\n      nome: \"grupo 3\",\n      login: login,\n      user: user,\n      guardaVariaveisCorrent: guardaVariaveisCorrent,\n      teste: teste,\n      alunoCorrent: alunoCorrent,\n      grupoCorrent: grupoCorrent,\n      enviaResultadoBancoT1: enviaResultadoBancoT1,\n      enviaResultadoBancoT2: enviaResultadoBancoT2,\n      enviaResultadoBancoT3: enviaResultadoBancoT3,\n      enviaResultadoBancoT4: enviaResultadoBancoT4,\n      avaliartruefalse: avaliartruefalse,\n      AvaliarGp: AvaliarGp,\n      guardaGrupo: guardaGrupo,\n      nomeGBavaliar: nomeGBavaliar\n    },\n    children: children\n  });\n}\n\nexport default AuthProvider;","map":{"version":3,"sources":["C:/Users/Usuário/Documents/megak/TCCreact-native/DiscalculiaHelper/src/contexts/auth.js"],"names":["React","createContext","useState","useNavigation","signInWithEmailAndPassword","auth","db","ref","set","onValue","update","AuthContext","AuthProvider","children","user","setUser","AvaliarGp","setAvaliarGp","pontosTeste","setPontosTeste","grupoCorrent","setGrupoCorrent","alunoCorrent","setAlunoCorrent","nomeGBavaliar","setNomeGBavaliar","navigation","login","email","password","then","value","alert","userId","uid","navigate","catch","error","console","log","strr","erroSenha","guardaVariaveisCorrent","alunoRef","nomegrupo","guardaGrupo","avaliartruefalse","valor","teste","enviaResultadoBancoT1","alunoVal","teste1","message","enviaResultadoBancoT2","teste2","enviaResultadoBancoT3","teste3","enviaResultadoBancoT4","teste4","avaliado","nome"],"mappings":"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","sourcesContent":["import React, { createContext, useState} from 'react';\r\n\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport { signInWithEmailAndPassword} from 'firebase/auth';\r\nimport { auth } from '../../src/BancoNoSql/conexaoFirebase';\r\n\r\nimport { db } from '../../src/BancoNoSql/conexaoFirebase';\r\nimport { ref, set, onValue, update } from 'firebase/database';\r\n\r\nexport const AuthContext = createContext({})\r\n\r\nfunction AuthProvider({children}){\r\n    \r\n\r\n    const [user, setUser] = useState({});\r\n    const [AvaliarGp, setAvaliarGp] = useState(false);\r\n\r\n    const [ pontosTeste, setPontosTeste] = useState(1);\r\n\r\n    const [grupoCorrent, setGrupoCorrent] = useState('');\r\n    const [alunoCorrent, setAlunoCorrent] = useState('');\r\n\r\n    const [nomeGBavaliar, setNomeGBavaliar] = useState('');\r\n\r\n    const navigation = useNavigation();\r\n\r\n\r\n    async function login(email,password){//Faz conexao com o banco, verifica se o email esta cadastrado e faz login\r\n        await signInWithEmailAndPassword(auth, email,password)\r\n        .then(value => {\r\n            alert('loguin com sucesso!');\r\n            setUser({\r\n                userId : value.user.uid,\r\n                email : email\r\n            })\r\n            navigation.navigate('PainelControle');\r\n            \r\n            \r\n        })\r\n        .catch(error => {console.log(error); //tratamento de erro de senha e email nao cadastrado\r\n              let strr = error;\r\n              if(strr == \"FirebaseError: Firebase: Error (auth/wrong-password).\"){\r\n              alert(\"senha incorreta\");\r\n             \r\n              }\r\n              if(strr == \"FirebaseError: Firebase: Error (auth/user-not-found).\"){\r\n              alert(\"E-mail não cadastrado!\")\r\n              setUser({\r\n                erroSenha : 'erro email'\r\n            })\r\n              }\r\n              \r\n        });\r\n    }\r\n\r\n    function guardaVariaveisCorrent(alunoRef, nomegrupo){\r\n        setAlunoCorrent(alunoRef);\r\n        setGrupoCorrent(nomegrupo); \r\n\r\n    }\r\n\r\n    function guardaGrupo(nomegrupo){\r\n        setNomeGBavaliar(nomegrupo); \r\n\r\n    }\r\n\r\n    function avaliartruefalse(valor){\r\n        if(valor == true)\r\n         setAvaliarGp(true);\r\n          else \r\n            setAvaliarGp(false);\r\n\r\n    }\r\n\r\n    function teste(){\r\n       setPontosTeste(pontosTeste+1); \r\n    }\r\n\r\n    function enviaResultadoBancoT1(){\r\n        let alunoVal = (alunoCorrent);\r\n        console.log(\"aluno corrent \"+ alunoCorrent);\r\n        //console.log(alunoVal);\r\n        update(ref(db, user.userId+'/' + grupoCorrent + alunoVal ), {\r\n            teste1: pontosTeste,\r\n            \r\n\r\n        }).then(() => {\r\n            alert(\"nota registrada!\")\r\n            setPontosTeste(1);\r\n            })\r\n          .catch((error) => {\r\n            alert(error.message)\r\n            alert(\"falhou nota\");\r\n            })\r\n    }\r\n\r\n    function enviaResultadoBancoT2(){\r\n        let alunoVal = (alunoCorrent);\r\n        console.log(\"aluno corrent \"+ alunoCorrent);\r\n        //console.log(alunoVal);\r\n        update(ref(db, user.userId+'/' + grupoCorrent + alunoVal ), {\r\n            teste2: pontosTeste,\r\n            \r\n\r\n        }).then(() => {\r\n            alert(\"nota registrada!\")\r\n            setPontosTeste(1);\r\n            })\r\n          .catch((error) => {\r\n            alert(error.message)\r\n            alert(\"falhou nota\");\r\n            })\r\n    }\r\n\r\n    function enviaResultadoBancoT3(){\r\n        let alunoVal = (alunoCorrent);\r\n        console.log(\"aluno corrent \"+ alunoCorrent);\r\n        //console.log(alunoVal);\r\n        update(ref(db, user.userId+'/' + grupoCorrent + alunoVal ), {\r\n            teste3: pontosTeste,\r\n            \r\n\r\n        }).then(() => {\r\n            alert(\"nota registrada!\")\r\n            setPontosTeste(1);\r\n            })\r\n          .catch((error) => {\r\n            alert(error.message)\r\n            alert(\"falhou nota\");\r\n            })\r\n    }\r\n\r\n    function enviaResultadoBancoT4(){\r\n        let alunoVal = (alunoCorrent);\r\n        console.log(\"aluno corrent \"+ alunoCorrent);\r\n        //console.log(alunoVal);\r\n        update(ref(db, user.userId+'/' + grupoCorrent + alunoVal ), {\r\n            teste4: pontosTeste,\r\n            avaliado:true\r\n            \r\n\r\n        }).then(() => {\r\n            alert(\"nota registrada!\")\r\n            setPontosTeste(1);\r\n            avaliartruefalse(true);\r\n            })\r\n          .catch((error) => {\r\n            alert(error.message)\r\n            alert(\"falhou nota\");\r\n            })\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n     <AuthContext.Provider value={{nome: \"grupo 3\", login, user, guardaVariaveisCorrent, teste,alunoCorrent, grupoCorrent,enviaResultadoBancoT1,enviaResultadoBancoT2,enviaResultadoBancoT3,enviaResultadoBancoT4,avaliartruefalse,AvaliarGp,guardaGrupo,nomeGBavaliar}}>\r\n         {children}\r\n     </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthProvider;"]},"metadata":{},"sourceType":"module"}