{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as Animatable from 'react-native-animatable';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Teste1_1(_ref) {\n  var route = _ref.route;\n\n  var _useState = useState([130, 160, 210, 300, 175, 30, 50, 80, 240, 35]),\n      _useState2 = _slicedToArray(_useState, 2),\n      questao = _useState2[0],\n      setQuestao = _useState2[1];\n\n  var _useState3 = useState(questao[Math.floor(Math.random() * 10)]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      x = _useState4[0],\n      setX = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      num = _useState6[0],\n      setNum = _useState6[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    setNum([x + 50, x + 100, x + 35, x + 30, x + 150, x + 150, x + 200, x + 110, x - 25, x - 25]);\n  }, []);\n\n  function opcao() {\n    navigation.navigate('Teste1_2', {\n      numeroResp1: x\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Animatable.View, {\n      animation: \"zoomIn\",\n      style: styles.numero,\n      children: _jsx(Text, {\n        style: styles.valor,\n        children: x\n      })\n    }), _jsx(Animatable.View, {\n      animation: \"fadeInLeft\",\n      style: styles.pergunta,\n      children: _jsxs(Text, {\n        style: styles.txt,\n        children: [\"Qual numero abaixo esta mais proximo de \", x, \"?\"]\n      })\n    }), _jsxs(Animatable.View, {\n      animation: \"zoomIn\",\n      style: styles.viewBtn,\n      children: [_jsxs(View, {\n        style: styles.viewBtn1e2,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.btn,\n          onPress: function onPress() {\n            return opcao();\n          },\n          children: _jsx(Text, {\n            style: styles.btnNum,\n            children: num[9]\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.btn,\n          children: _jsx(Text, {\n            style: styles.btnNum,\n            children: num[1]\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.viewBtn3e4,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.btn,\n          children: _jsx(Text, {\n            style: styles.btnNum,\n            children: num[4]\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.btn,\n          children: _jsx(Text, {\n            style: styles.btnNum,\n            children: num[3]\n          })\n        })]\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#38a69d'\n  },\n  numero: {\n    flex: 2,\n    backgroundColor: '#fff',\n    borderRadius: 170,\n    margin: '10%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  valor: {\n    fontSize: 75,\n    fontWeight: 'bold'\n  },\n  pergunta: {\n    flex: 1\n  },\n  viewBtn: {\n    flex: 1\n  },\n  viewBtn1e2: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginLeft: '5%',\n    marginRight: '5%'\n  },\n  viewBtn3e4: {\n    flexDirection: 'row',\n    marginTop: 50,\n    justifyContent: 'space-between',\n    marginLeft: '5%',\n    marginRight: '5%'\n  },\n  btn: {\n    backgroundColor: '#fff',\n    width: '44%',\n    height: 50,\n    borderRadius: 10,\n    marginTop: -25,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  txt: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginLeft: '5%',\n    marginRight: '5%'\n  },\n  btnNum: {\n    fontSize: 25,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/Usuário/Documents/megak/TCCreact-native/DiscalculiaHelper/src/pages/Testes/Teste1/Teste1_1/index.js"],"names":["React","useState","useEffect","Animatable","useNavigation","Teste1_1","route","questao","setQuestao","Math","floor","random","x","setX","num","setNum","navigation","opcao","navigate","numeroResp1","styles","container","numero","valor","pergunta","txt","viewBtn","viewBtn1e2","btn","btnNum","viewBtn3e4","StyleSheet","create","flex","backgroundColor","borderRadius","margin","alignItems","justifyContent","fontSize","fontWeight","flexDirection","marginLeft","marginRight","marginTop","width","height","color"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport { View,Text,StyleSheet, TouchableOpacity } from 'react-native';\r\n\r\nimport * as Animatable from 'react-native-animatable';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\n\r\nexport default function Teste1_1({route}) {\r\n  //Vetor estático\r\n  const [questao, setQuestao] = useState([130,160,210,300,175,30,50,80,240,35]);\r\n\r\n  //Variavel que aponta para um index do vetor \"questao\"\r\n  const [x, setX] = useState(questao[Math.floor(Math.random() * 10)]);\r\n\r\n  //Vetor que recebe  \"x\" somado com outros valores\r\n  const [num, setNum] = useState([]);\r\n\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    //populando vetor \"Num\"\r\n    setNum([x + 50, x + 100, x + 35, x + 30, x +150, x + 150, x + 200, x + 110, x - 25, x -25])\r\n\r\n  },[]);\r\n\r\n  function opcao(){\r\n    //função chama o próximo teste, envia a variavel 'x' para que o proximo numero de comparação nao seja igual\r\n    //ao anterior e envia a responta para o banco de dados \"Firebase\".\r\n   navigation.navigate('Teste1_2', {\r\n     numeroResp1:x\r\n   })\r\n  }\r\n\r\n  \r\n return (\r\n   <View style={styles.container}>\r\n\r\n    <Animatable.View  animation=\"zoomIn\" style={styles.numero}>\r\n      <Text style={styles.valor}>{x}</Text>\r\n    </Animatable.View>\r\n\r\n     <Animatable.View animation=\"fadeInLeft\" style={styles.pergunta}>\r\n       <Text style={styles.txt}>Qual numero abaixo esta mais proximo de {x}?</Text>\r\n     </Animatable.View>\r\n      \r\n      <Animatable.View animation=\"zoomIn\" style={styles.viewBtn}>\r\n          <View style={styles.viewBtn1e2}>\r\n            <TouchableOpacity style={styles.btn} onPress={() => opcao()}>\r\n              <Text style={styles.btnNum}>{num[9]}</Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity style={styles.btn}>\r\n              <Text style={styles.btnNum}>{num[1]}</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          <View style={styles.viewBtn3e4}>\r\n            <TouchableOpacity style={styles.btn}>\r\n              <Text style={styles.btnNum}>{num[4]}</Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity style={styles.btn}>\r\n              <Text style={styles.btnNum}>{num[3]}</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n      </Animatable.View>\r\n\r\n   </View>\r\n  );\r\n}\r\n//Estilização da pagina\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex: 1,\r\n        backgroundColor:'#38a69d'\r\n    },\r\n    numero:{\r\n      flex:2,\r\n      backgroundColor:'#fff',\r\n      borderRadius:170,\r\n      margin:'10%',\r\n      alignItems:'center',\r\n      justifyContent:'center'\r\n    },\r\n    valor:{\r\n      fontSize:75,\r\n      fontWeight:'bold',\r\n    },\r\n    pergunta:{\r\n      flex:1\r\n    },\r\n    viewBtn:{\r\n      flex:1,\r\n      \r\n    },\r\n    viewBtn1e2:{\r\n     flexDirection:'row',\r\n     justifyContent:'space-between',\r\n     marginLeft:'5%',\r\n     marginRight:'5%'\r\n    },\r\n    viewBtn3e4:{\r\n     flexDirection:'row',\r\n     marginTop:50,\r\n     justifyContent:'space-between',\r\n     marginLeft:'5%',\r\n     marginRight:'5%'\r\n    },\r\n    btn:{\r\n     backgroundColor:'#fff',\r\n     width:'44%',\r\n     height:50,\r\n     borderRadius:10,\r\n     marginTop:-25,\r\n     alignItems:'center',\r\n     justifyContent:'center'\r\n     \r\n    },\r\n    txt:{\r\n      fontSize:28,\r\n      fontWeight:'bold',\r\n      color:'#fff',\r\n      marginLeft:'5%',\r\n      marginRight:'5%'\r\n    },\r\n    btnNum:{\r\n      fontSize:25,\r\n      fontWeight:'bold'\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}