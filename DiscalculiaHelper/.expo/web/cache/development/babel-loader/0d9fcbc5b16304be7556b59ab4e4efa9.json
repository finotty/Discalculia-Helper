{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { createContext, useState } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from \"../../src/BancoNoSql/conexaoFirebase\";\nimport { db } from \"../../src/BancoNoSql/conexaoFirebase\";\nimport { ref, set, onValue, update } from 'firebase/database';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var AuthContext = createContext({});\n\nfunction AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      AvaliarGp = _useState4[0],\n      setAvaliarGp = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pontosTeste = _useState6[0],\n      setPontosTeste = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      grupoCorrent = _useState8[0],\n      setGrupoCorrent = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      alunoCorrent = _useState10[0],\n      setAlunoCorrent = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      nomeGBavaliar = _useState12[0],\n      setNomeGBavaliar = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      visivelCorrent = _useState14[0],\n      setVisivelCorrent = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      marcador = _useState16[0],\n      setMarcador = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      testeContagem = _useState18[0],\n      setTesteContagem = _useState18[1];\n\n  var navigation = useNavigation();\n\n  function login(email, password) {\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(signInWithEmailAndPassword(auth, email, password).then(function (value) {\n              alert('loguin com sucesso!');\n              setUser({\n                userId: value.user.uid,\n                email: email\n              });\n              navigation.navigate('PainelControle');\n            }).catch(function (error) {\n              console.log(error);\n              var strr = error;\n\n              if (strr == \"FirebaseError: Firebase: Error (auth/wrong-password).\") {\n                alert(\"senha incorreta\");\n              }\n\n              if (strr == \"FirebaseError: Firebase: Error (auth/user-not-found).\") {\n                alert(\"E-mail não cadastrado!\");\n                setUser({\n                  erroSenha: 'erro email'\n                });\n              }\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function guardaVariaveisCorrent(alunoRef, nomegrupo) {\n    setAlunoCorrent(alunoRef);\n    setGrupoCorrent(nomegrupo);\n  }\n\n  function guardaGrupo(nomegrupo) {\n    setNomeGBavaliar(nomegrupo);\n  }\n\n  function avaliartruefalse(valor) {\n    if (valor == true) setAvaliarGp(true);else setAvaliarGp(false);\n  }\n\n  function teste() {\n    setPontosTeste(pontosTeste + 1);\n  }\n\n  function contTeste(nomeCont) {\n    setTesteContagem(nomeCont);\n  }\n\n  function enviaResultadoBancoT1() {\n    var alunoVal = alunoCorrent;\n    update(ref(db, user.userId + '/' + grupoCorrent + alunoVal + testeContagem), {\n      estimativa: pontosTeste\n    }).then(function () {\n      setPontosTeste(1);\n    }).catch(function (error) {\n      alert(error.message);\n      alert(\"falhou nota\");\n    });\n  }\n\n  function enviaResultadoBancoT2() {\n    var alunoVal = alunoCorrent;\n    console.log(\"aluno corrent \" + alunoCorrent);\n    update(ref(db, user.userId + '/' + grupoCorrent + alunoVal + testeContagem), {\n      logica: pontosTeste\n    }).then(function () {\n      setPontosTeste(1);\n    }).catch(function (error) {\n      alert(error.message);\n      alert(\"falhou nota\");\n    });\n  }\n\n  function enviaResultadoBancoT3() {\n    var alunoVal = alunoCorrent;\n    console.log(\"aluno corrent \" + alunoCorrent);\n    update(ref(db, user.userId + '/' + grupoCorrent + alunoVal + testeContagem), {\n      memoria: pontosTeste\n    }).then(function () {\n      setPontosTeste(1);\n    }).catch(function (error) {\n      alert(error.message);\n      alert(\"falhou nota\");\n    });\n  }\n\n  function enviaResultadoBancoT4() {\n    var alunoVal = alunoCorrent;\n\n    if (testeContagem == \"teste1/\") {\n      update(ref(db, user.userId + '/' + grupoCorrent + alunoVal), {\n        avaliado: true\n      }).then(function () {\n        setPontosTeste(1);\n        avaliartruefalse(true);\n      }).catch(function (error) {\n        alert(error.message);\n        alert(\"falhou nota\");\n      });\n    } else if (testeContagem == \"teste2/\") {\n      update(ref(db, user.userId + '/' + grupoCorrent + alunoVal), {\n        avaliado1: true\n      }).then(function () {\n        setPontosTeste(1);\n        avaliartruefalse(true);\n      }).catch(function (error) {\n        alert(error.message);\n        alert(\"falhou nota\");\n      });\n    } else if (testeContagem == \"teste3/\") {\n      update(ref(db, user.userId + '/' + grupoCorrent + alunoVal), {\n        avaliado2: true\n      }).then(function () {\n        setPontosTeste(1);\n        avaliartruefalse(true);\n      }).catch(function (error) {\n        alert(error.message);\n        alert(\"falhou nota\");\n      });\n    }\n\n    var numtest = '';\n\n    if (testeContagem == 'teste1/') {\n      numtest = 'primeira avaliação';\n    } else if (testeContagem == 'teste2/') {\n      numtest = 'segunda avaliação';\n    } else {\n      numtest = 'terceira avaliação';\n    }\n\n    update(ref(db, user.userId + '/' + grupoCorrent + alunoVal + testeContagem), {\n      visaoEspacial: pontosTeste,\n      numteste: numtest\n    }).then(function () {\n      setPontosTeste(1);\n      avaliartruefalse(true);\n    }).catch(function (error) {\n      alert(error.message);\n      alert(\"falhou nota\");\n    });\n  }\n\n  function aplicaTesteFalta(n) {\n    setVisivelCorrent(n);\n  }\n\n  function marcarAluno(n) {\n    setMarcador(n);\n  }\n\n  return _jsx(AuthContext.Provider, {\n    value: {\n      contTeste: contTeste,\n      login: login,\n      user: user,\n      guardaVariaveisCorrent: guardaVariaveisCorrent,\n      teste: teste,\n      alunoCorrent: alunoCorrent,\n      grupoCorrent: grupoCorrent,\n      enviaResultadoBancoT1: enviaResultadoBancoT1,\n      enviaResultadoBancoT2: enviaResultadoBancoT2,\n      enviaResultadoBancoT3: enviaResultadoBancoT3,\n      enviaResultadoBancoT4: enviaResultadoBancoT4,\n      avaliartruefalse: avaliartruefalse,\n      AvaliarGp: AvaliarGp,\n      guardaGrupo: guardaGrupo,\n      nomeGBavaliar: nomeGBavaliar,\n      aplicaTesteFalta: aplicaTesteFalta,\n      visivelCorrent: visivelCorrent,\n      marcarAluno: marcarAluno,\n      marcador: marcador\n    },\n    children: children\n  });\n}\n\nexport default AuthProvider;","map":{"version":3,"sources":["C:/Users/Usuário/Documents/megak/TCCreact-native/DiscalculiaHelper/src/contexts/auth.js"],"names":["React","createContext","useState","useNavigation","signInWithEmailAndPassword","auth","db","ref","set","onValue","update","AuthContext","AuthProvider","children","user","setUser","AvaliarGp","setAvaliarGp","pontosTeste","setPontosTeste","grupoCorrent","setGrupoCorrent","alunoCorrent","setAlunoCorrent","nomeGBavaliar","setNomeGBavaliar","visivelCorrent","setVisivelCorrent","marcador","setMarcador","testeContagem","setTesteContagem","navigation","login","email","password","then","value","alert","userId","uid","navigate","catch","error","console","log","strr","erroSenha","guardaVariaveisCorrent","alunoRef","nomegrupo","guardaGrupo","avaliartruefalse","valor","teste","contTeste","nomeCont","enviaResultadoBancoT1","alunoVal","estimativa","message","enviaResultadoBancoT2","logica","enviaResultadoBancoT3","memoria","enviaResultadoBancoT4","avaliado","avaliado1","avaliado2","numtest","visaoEspacial","numteste","aplicaTesteFalta","n","marcarAluno"],"mappings":"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","sourcesContent":["import React, { createContext, useState} from 'react';\r\n\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport { signInWithEmailAndPassword} from 'firebase/auth';\r\nimport { auth } from '../../src/BancoNoSql/conexaoFirebase';\r\n\r\nimport { db } from '../../src/BancoNoSql/conexaoFirebase';\r\nimport { ref, set, onValue, update } from 'firebase/database';\r\n\r\nexport const AuthContext = createContext({})\r\n\r\nfunction AuthProvider({children}){\r\n    const [user, setUser] = useState({}); //Recebe o UID da função \"login\"\r\n    const [AvaliarGp, setAvaliarGp] = useState(false);\r\n\r\n    const [pontosTeste, setPontosTeste] = useState(1);\r\n\r\n    const [grupoCorrent, setGrupoCorrent] = useState('');\r\n    const [alunoCorrent, setAlunoCorrent] = useState('');\r\n\r\n    const [nomeGBavaliar, setNomeGBavaliar] = useState('');\r\n\r\n    const [visivelCorrent, setVisivelCorrent] = useState(false);\r\n    const [marcador, setMarcador] = useState(false);\r\n\r\n    const [testeContagem, setTesteContagem] = useState('');\r\n\r\n    const navigation = useNavigation(); //responsável por fazer navegação entre telas\r\n\r\n\r\n    async function login(email,password){//Faz conexao com o banco, verifica se o email esta cadastrado e faz login\r\n        await signInWithEmailAndPassword(auth, email,password)\r\n        .then(value => {\r\n            alert('loguin com sucesso!');\r\n            setUser({\r\n                userId : value.user.uid,\r\n                email : email\r\n            })\r\n            navigation.navigate('PainelControle');   \r\n        })\r\n        .catch(error => {console.log(error); //tratamento de erro de senha e email nao cadastrado\r\n              let strr = error;\r\n              if(strr == \"FirebaseError: Firebase: Error (auth/wrong-password).\"){\r\n              alert(\"senha incorreta\");\r\n              }\r\n              if(strr == \"FirebaseError: Firebase: Error (auth/user-not-found).\"){\r\n              alert(\"E-mail não cadastrado!\")\r\n              setUser({\r\n                erroSenha : 'erro email'\r\n            })}        \r\n        });\r\n    }\r\n\r\n    function guardaVariaveisCorrent(alunoRef, nomegrupo){//Mantém global o aluno que esta sendo avaliado e o grupo pentencente\r\n        setAlunoCorrent(alunoRef);\r\n        setGrupoCorrent(nomegrupo); \r\n    }\r\n\r\n    function guardaGrupo(nomegrupo){//Ajuda como referencia para possibilitar a edição do grupo a qualquer momento\r\n        setNomeGBavaliar(nomegrupo); \r\n    }\r\n\r\n    function avaliartruefalse(valor){//Função que permite a chamada de outra função na circunstancia correta\r\n        if(valor == true)\r\n         setAvaliarGp(true);\r\n          else \r\n            setAvaliarGp(false);\r\n\r\n    }\r\n\r\n    function teste(){//Incrementa +1 na variavel \"pontosTeste\", para saber se o aluno acertou ou nao a questao do teste\r\n       setPontosTeste(pontosTeste+1); \r\n    }\r\n\r\n    function contTeste(nomeCont){\r\n      setTesteContagem(nomeCont);\r\n    }\r\n\r\n    function enviaResultadoBancoT1(){//Envia resultado do primeiro teste para o firebase\r\n        let alunoVal = (alunoCorrent);\r\n        //console.log(\"aluno corrent \"+ alunoCorrent);\r\n        //console.log(alunoVal);\r\n        update(ref(db, user.userId+'/' + grupoCorrent + alunoVal + testeContagem ), {\r\n            estimativa: pontosTeste,\r\n        }).then(() => {\r\n           // alert(\"nota registrada!\")\r\n            setPontosTeste(1);\r\n            })\r\n          .catch((error) => {\r\n            alert(error.message)\r\n            alert(\"falhou nota\");\r\n            })\r\n    }\r\n\r\n    function enviaResultadoBancoT2(){//Envia resultado do segundo teste para o firebase\r\n        let alunoVal = (alunoCorrent);\r\n        console.log(\"aluno corrent \"+ alunoCorrent);\r\n        //console.log(alunoVal);\r\n        update(ref(db, user.userId+'/' + grupoCorrent + alunoVal + testeContagem), {\r\n            logica: pontosTeste,\r\n        }).then(() => {\r\n           // alert(\"nota registrada!\")\r\n            setPontosTeste(1);\r\n            })\r\n          .catch((error) => {\r\n            alert(error.message)\r\n            alert(\"falhou nota\");\r\n            })\r\n    }\r\n\r\n    function enviaResultadoBancoT3(){//Envia resultado do terceiro teste para o firebase\r\n        let alunoVal = (alunoCorrent);\r\n        console.log(\"aluno corrent \"+ alunoCorrent);\r\n        //console.log(alunoVal);\r\n        update(ref(db, user.userId+'/' + grupoCorrent + alunoVal + testeContagem), {\r\n            memoria: pontosTeste,\r\n        }).then(() => {\r\n            //alert(\"nota registrada!\")\r\n            setPontosTeste(1);\r\n            })\r\n          .catch((error) => {\r\n            alert(error.message)\r\n            alert(\"falhou nota\");\r\n            })\r\n    }\r\n\r\n    function enviaResultadoBancoT4(){//Envia resultado do quarto teste para o firebase\r\n        let alunoVal = (alunoCorrent);\r\n        //console.log(\"aluno corrent \"+ alunoCorrent);\r\n        //console.log(alunoVal);\r\n        if(testeContagem == \"teste1/\"){\r\n        update(ref(db, user.userId+'/' + grupoCorrent + alunoVal ), {    \r\n            avaliado:true\r\n        }).then(() => {\r\n            //alert(\"nota registrada!\")\r\n            setPontosTeste(1);\r\n            avaliartruefalse(true);\r\n            })\r\n          .catch((error) => {\r\n            alert(error.message)\r\n            alert(\"falhou nota\");\r\n            })\r\n        }else if(testeContagem == \"teste2/\"){\r\n            update(ref(db, user.userId+'/' + grupoCorrent + alunoVal ), {    \r\n                avaliado1:true\r\n            }).then(() => {\r\n                //alert(\"nota registrada!\")\r\n                setPontosTeste(1);\r\n                avaliartruefalse(true);\r\n                })\r\n              .catch((error) => {\r\n                alert(error.message)\r\n                alert(\"falhou nota\");\r\n                })\r\n            }else if(testeContagem == \"teste3/\"){\r\n                update(ref(db, user.userId+'/' + grupoCorrent + alunoVal ), {    \r\n                    avaliado2:true\r\n                }).then(() => {\r\n                    //alert(\"nota registrada!\")\r\n                    setPontosTeste(1);\r\n                    avaliartruefalse(true);\r\n                    })\r\n                  .catch((error) => {\r\n                    alert(error.message)\r\n                    alert(\"falhou nota\");\r\n                    })\r\n                }\r\n            //adicionar pontuação\r\n            let numtest ='';\r\n            if(testeContagem == 'teste1/'){\r\n                numtest = 'primeira avaliação';\r\n            }else if (testeContagem == 'teste2/'){\r\n                numtest = 'segunda avaliação';\r\n            }else {\r\n                numtest = 'terceira avaliação';\r\n            }\r\n            update(ref(db, user.userId+'/' + grupoCorrent + alunoVal + testeContagem ), {\r\n            \r\n                visaoEspacial:pontosTeste,\r\n                numteste:numtest\r\n            }).then(() => {\r\n                //alert(\"nota registrada!\")\r\n               // setGrupoCorrent('');\r\n               // setNomeGBavaliar('');\r\n                setPontosTeste(1);\r\n                avaliartruefalse(true);\r\n                })\r\n              .catch((error) => {\r\n                alert(error.message)\r\n                alert(\"falhou nota\");\r\n                })\r\n    }\r\n\r\n    function aplicaTesteFalta(n){\r\n     setVisivelCorrent(n);\r\n    }\r\n    function marcarAluno(n){\r\n        setMarcador(n);\r\n    }\r\n\r\n    return(//exporta para toda aplicação\r\n     <AuthContext.Provider value={{contTeste,login, user, guardaVariaveisCorrent, teste,alunoCorrent, grupoCorrent,enviaResultadoBancoT1,enviaResultadoBancoT2,enviaResultadoBancoT3,enviaResultadoBancoT4,avaliartruefalse,AvaliarGp,guardaGrupo,nomeGBavaliar,aplicaTesteFalta,visivelCorrent,marcarAluno,marcador}}>\r\n         {children}\r\n     </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthProvider;"]},"metadata":{},"sourceType":"module"}