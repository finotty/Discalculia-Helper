{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AppIntroSlider from 'react-native-app-intro-slider';\nimport * as Animatable from 'react-native-animatable';\nimport { useNavigation } from '@react-navigation/native';\nimport { AuthContext } from \"../../../contexts/auth\";\nimport { db } from \"../../../BancoNoSql/conexaoFirebase\";\nimport { ref, set, onValue } from 'firebase/database';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar inser = true;\nexport default function EscolherAluno(_ref) {\n  var route = _ref.route;\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user,\n      guardaVariaveisCorrent = _useContext.guardaVariaveisCorrent,\n      nomeGBavaliar = _useContext.nomeGBavaliar,\n      aplicaTesteFalta = _useContext.aplicaTesteFalta,\n      visivelCorrent = _useContext.visivelCorrent,\n      contTeste = _useContext.contTeste,\n      guardaGrupo = _useContext.guardaGrupo;\n\n  var _useState = useState(user.userId + '/'),\n      _useState2 = _slicedToArray(_useState, 2),\n      userId = _useState2[0],\n      setUserId = _useState2[1];\n\n  var _useState3 = useState(nomeGBavaliar + '/'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nomeGrupo = _useState4[0],\n      setNomeGrupo = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nomeRecebido = _useState6[0],\n      setNomeRecebido = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      visivel = _useState8[0],\n      setVisivel = _useState8[1];\n\n  var navigation = useNavigation();\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      aNome = _useState10[0],\n      setANome = _useState10[1];\n\n  var dd = [];\n  useEffect(function () {\n    if (visivelCorrent == true) {\n      setVisivel(true);\n      aplicaTesteFalta(false);\n    } else {\n      FlatRefresh();\n    }\n  }, []);\n  var slider = [{\n    key: '1',\n    title: '',\n    text: '',\n    image: _jsx(Image, {\n      source: require(\"../../../assets/tuto1_1.png\"),\n      style: {\n        resizeMode: 'center',\n        height: '70%',\n        width: '80%',\n        borderWidth: 1,\n        borderColor: '#fff',\n        marginTop: -20\n      }\n    })\n  }, {\n    key: '2',\n    title: 'Exemplo de exercício',\n    text: 'Basta pressionar o número que você acha mais próximo de 10',\n    image: _jsx(Image, {\n      source: require(\"../../../assets/tuto1_2.png\"),\n      style: {\n        resizeMode: 'center',\n        height: '70%',\n        width: '80%',\n        borderWidth: 1,\n        borderColor: '#fff',\n        marginTop: -25\n      }\n    })\n  }, {\n    key: '3',\n    title1: 'Entendido? Vamos começar!',\n    text2: 'Basta pressionar o número que corresponde a quantidade de bolinhas da tela anterior',\n    butto: _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        marginBottom: '20%'\n      },\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return chamaTeste2();\n        },\n        style: {\n          borderRadius: 150,\n          backgroundColor: '#fff',\n          width: 250,\n          height: 250,\n          justifyContent: 'center'\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 50,\n            fontWeight: 'bold',\n            textAlign: 'center',\n            color: '#38a69d'\n          },\n          children: \"Iniciar\"\n        })\n      })\n    })\n  }];\n\n  function chamaModal(alunoRef, avaliado) {\n    if (avaliado == false) {\n      setVisivel(true);\n      guardaVariaveisCorrent(alunoRef, nomeGrupo);\n      contTeste('teste1/');\n    } else {\n      alert(\"Este aluno ja foi avaliado!\");\n    }\n  }\n\n  function chamaTeste2() {\n    setVisivel(false);\n    navigation.navigate('Teste1_1');\n  }\n\n  function FlatRefresh() {\n    var myDoc = ref(db, userId + nomeGrupo);\n    console.log(\"grupo: \" + nomeGrupo);\n    console.log(\"nomeGbAvaliar: \" + nomeGBavaliar);\n    onValue(myDoc, function (snapshot) {\n      var data = snapshot.val();\n      var lt = [];\n      lt.push(data);\n      dd = lt.map(function (obj) {\n        return Object.keys(obj).map(function (key) {\n          return obj[key];\n        });\n      });\n      var b = dd[0].map(function (item) {\n        return item;\n      });\n      var cont = b.length;\n      setNomeRecebido(b);\n    });\n  }\n\n  function renderSliders(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center'\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 28,\n          color: '#fff',\n          textAlign: 'center',\n          marginTop: 15,\n          fontWeight: 'bold'\n        },\n        children: item.title\n      }), _jsx(Text, {\n        style: {\n          fontSize: 26,\n          color: '#fff',\n          textAlign: 'center',\n          marginTop: 15,\n          fontWeight: 'bold'\n        },\n        children: item.title1\n      }), item.image, item.butto, _jsx(Text, {\n        style: {\n          fontSize: 20,\n          color: '#fff',\n          textAlign: 'center',\n          marginTop: 15\n        },\n        children: item.text\n      })]\n    });\n  }\n\n  function resetVariavel() {\n    var g = '';\n    guardaGrupo(g);\n    console.log('passou aqui' + g);\n    navigation.reset({\n      index: 0,\n      routes: [{\n        name: \"PainelControle\"\n      }]\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Animatable.View, {\n      animation: \"fadeInLeft\",\n      style: styles.viewTitle,\n      children: _jsx(Text, {\n        style: styles.title,\n        children: \"Aplicar Testes\"\n      })\n    }), _jsx(Text, {\n      style: styles.txtEscolha,\n      children: \"Escolha um aluno para avaliar \"\n    }), _jsx(Animatable.View, {\n      animation: \"zoomIn\",\n      style: styles.viewFlatList,\n      children: _jsx(FlatList, {\n        data: nomeRecebido,\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return _jsx(View, {\n            style: styles.viewFlat,\n            children: _jsx(TouchableOpacity, {\n              style: item.avaliado == true ? styles.btnFlatAvaliado : styles.btnFlat,\n              onPress: function onPress() {\n                return chamaModal(item.alunoReferencia, item.avaliado);\n              },\n              children: _jsx(Text, {\n                style: styles.txtFlat,\n                children: item.nome\n              })\n            })\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.nome;\n        }\n      })\n    }), _jsx(Animatable.View, {\n      animation: \"zoomIn\",\n      style: styles.viewBtn,\n      children: _jsx(TouchableOpacity, {\n        style: styles.btnIniciar,\n        onPress: function onPress() {\n          return navigation.navigate(\"InserirAluno\", {\n            inserirTrue: inser\n          });\n        },\n        children: _jsx(Text, {\n          style: styles.btnIniciarTxt,\n          children: \"Editar Grupo\"\n        })\n      })\n    }), _jsx(Animatable.View, {\n      animation: \"zoomIn\",\n      style: styles.viewBtn2,\n      children: _jsx(TouchableOpacity, {\n        style: styles.btnIniciar,\n        onPress: function onPress() {\n          return resetVariavel();\n        },\n        children: _jsx(Text, {\n          style: styles.btnIniciarTxt,\n          children: \"Inicio\"\n        })\n      })\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      visible: visivel,\n      children: _jsx(View, {\n        style: styles.container,\n        children: _jsx(AppIntroSlider, {\n          renderItem: renderSliders,\n          data: slider,\n          activeDotStyle: {\n            backgroundColor: '#fff',\n            width: 30\n          },\n          renderNextButton: function renderNextButton() {},\n          renderDoneButton: function renderDoneButton() {}\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#38a69d'\n  },\n  viewTitle: {\n    flex: 1,\n    marginTop: '10%',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  viewFlatList: {\n    flex: 4,\n    margin: '5%',\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    marginBottom: \"10%\"\n  },\n  viewBtn: {\n    flex: 1,\n    alignItems: 'center',\n    marginBottom: -25\n  },\n  viewBtn2: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  btnIniciar: {\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '90%',\n    height: 40,\n    borderRadius: 10\n  },\n  btnIniciarTxt: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#38a69d'\n  },\n  txtEscolha: {\n    textAlign: 'center',\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: -10\n  },\n  viewFlat: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  txtFlat: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  btnFlat: {\n    borderWidth: 1,\n    width: \"85%\",\n    height: 30,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 15,\n    borderRadius: 15\n  },\n  btnFlatAvaliado: {\n    borderWidth: 1,\n    width: \"85%\",\n    height: 30,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 15,\n    borderRadius: 15,\n    backgroundColor: 'green'\n  }\n});","map":{"version":3,"sources":["C:/Users/Usuário/Documents/megak/TCCreact-native/DiscalculiaHelper/src/pages/Aluno/EscolherAluno/index.js"],"names":["React","useContext","useEffect","useState","AppIntroSlider","Animatable","useNavigation","AuthContext","db","ref","set","onValue","inser","EscolherAluno","route","user","guardaVariaveisCorrent","nomeGBavaliar","aplicaTesteFalta","visivelCorrent","contTeste","guardaGrupo","userId","setUserId","nomeGrupo","setNomeGrupo","nomeRecebido","setNomeRecebido","visivel","setVisivel","navigation","aNome","setANome","dd","FlatRefresh","slider","key","title","text","image","require","resizeMode","height","width","borderWidth","borderColor","marginTop","title1","text2","butto","flex","justifyContent","marginBottom","chamaTeste2","borderRadius","backgroundColor","fontSize","fontWeight","textAlign","color","chamaModal","alunoRef","avaliado","alert","navigate","myDoc","console","log","snapshot","data","val","lt","push","map","obj","Object","keys","b","item","cont","length","renderSliders","alignItems","resetVariavel","g","reset","index","routes","name","styles","container","viewTitle","txtEscolha","viewFlatList","viewFlat","btnFlatAvaliado","btnFlat","alunoReferencia","txtFlat","nome","viewBtn","btnIniciar","inserirTrue","btnIniciarTxt","viewBtn2","StyleSheet","create","margin"],"mappings":"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","sourcesContent":["import React,{useContext,useEffect,useState} from 'react';\r\nimport { View,Text, TouchableOpacity,FlatList, StyleSheet,Modal, Image } from 'react-native';\r\nimport AppIntroSlider from 'react-native-app-intro-slider';\r\n\r\nimport * as Animatable from 'react-native-animatable';\r\n\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport { AuthContext } from '../../../contexts/auth';\r\nimport { db } from '../../../BancoNoSql/conexaoFirebase';\r\nimport { ref, set, onValue } from 'firebase/database';\r\nlet inser = true;\r\n\r\n\r\n\r\n\r\nexport default function EscolherAluno({route}) {\r\n\r\n    const { user, guardaVariaveisCorrent,nomeGBavaliar, aplicaTesteFalta, visivelCorrent,contTeste,guardaGrupo } = useContext(AuthContext);\r\n\r\n    const [userId, setUserId]=useState(user.userId+'/');\r\n    const [nomeGrupo, setNomeGrupo] = useState(nomeGBavaliar+'/');\r\n    const [nomeRecebido, setNomeRecebido]=useState([]);\r\n    const [visivel, setVisivel] = useState(false);\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const [aNome, setANome] = useState('');\r\n    var dd =[];\r\n\r\n    useEffect(() => {\r\n      \r\n      if(visivelCorrent == true){\r\n          setVisivel(true);\r\n          aplicaTesteFalta(false);\r\n      }else{\r\n        FlatRefresh();\r\n      }\r\n    },[])\r\n\r\n    const slider = [//Lista com os dados do tutorial do primeiro teste\r\n        {\r\n          key:'1',\r\n          title:'',\r\n          text:'',\r\n          image: <Image\r\n          source={require('../../../assets/tuto1_1.png')}\r\n          style={{\r\n              resizeMode:'center',\r\n              height:'70%',\r\n              width:'80%',\r\n              borderWidth:1,\r\n              borderColor:'#fff',\r\n              marginTop:-20\r\n          }}\r\n         /> \r\n        },\r\n        {\r\n            key:'2',\r\n            title:'Exemplo de exercício',\r\n            text:'Basta pressionar o número que você acha mais próximo de 10',\r\n            image:   <Image\r\n            source={require('../../../assets/tuto1_2.png')}\r\n            style={{\r\n                resizeMode:'center',\r\n                height:'70%',\r\n                width:'80%',\r\n                borderWidth:1,\r\n                borderColor:'#fff',\r\n                marginTop:-25\r\n            }}\r\n           />  \r\n          },\r\n          {\r\n            key:'3',\r\n            title1:'Entendido? Vamos começar!',\r\n            text2:'Basta pressionar o número que corresponde a quantidade de bolinhas da tela anterior',\r\n            butto: <View style={{flex:1,justifyContent:'center', marginBottom:'20%'}}>\r\n                <TouchableOpacity onPress={() => chamaTeste2()} style={{borderRadius:150,backgroundColor:'#fff',width:250,height:250, justifyContent:'center'}}>\r\n                <Text style={{fontSize:50,fontWeight:'bold',textAlign:'center',color:'#38a69d'}}>Iniciar</Text>\r\n            </TouchableOpacity>\r\n            \r\n            </View>\r\n            \r\n          }\r\n    ]\r\n\r\n    function chamaModal(alunoRef,avaliado){\r\n        if(avaliado == false){\r\n        setVisivel(true);\r\n        guardaVariaveisCorrent(alunoRef, nomeGrupo);\r\n        contTeste('teste1/');\r\n        }\r\n        else {\r\n            alert(\"Este aluno ja foi avaliado!\");\r\n        }\r\n\r\n    }\r\n\r\n    function chamaTeste2(){\r\n        setVisivel(false)\r\n        navigation.navigate('Teste1_1')\r\n    }\r\n\r\n    function FlatRefresh(){ //atualiza o array do flatlist \"alunos\"\r\n         const myDoc = ref(db,userId + nomeGrupo );\r\n          console.log(\"grupo: \"+nomeGrupo);\r\n          console.log(\"nomeGbAvaliar: \"+nomeGBavaliar);\r\n         onValue(myDoc, (snapshot) => {\r\n             \r\n             const data = snapshot.val();\r\n             let lt = [];\r\n           \r\n             lt.push(data);\r\n             \r\n              dd = lt.map(function(obj){\r\n               return Object.keys(obj).map(function(key) { //converte em array\r\n     \r\n                 return obj[key];\r\n               })\r\n             })\r\n         \r\n     \r\n               let b = dd[0].map((item) => {\r\n                 return item;\r\n               })\r\n \r\n               let cont = b.length;\r\n               setNomeRecebido(b);//array do flat list\r\n               \r\n             \r\n             \r\n             \r\n         })\r\n    }\r\n\r\n    function renderSliders({item}){\r\n        return(\r\n     <View style={{flex:1,alignItems:'center'}}>\r\n        <Text style={{fontSize:28, color:'#fff', textAlign:'center',marginTop:15, fontWeight:'bold'}}>{item.title}</Text>\r\n        <Text style={{fontSize:26, color:'#fff', textAlign:'center',marginTop:15, fontWeight:'bold'}}>{item.title1}</Text>\r\n\r\n       {item.image}\r\n      \r\n       {item.butto}\r\n       \r\n       <Text style={{fontSize:20, color:'#fff', textAlign:'center', marginTop:15}}>{item.text}</Text>\r\n       \r\n     </View>\r\n        )\r\n    }\r\n\r\n    function resetVariavel(){\r\n        let g ='';\r\n        guardaGrupo(g);\r\n        console.log('passou aqui'+g);\r\n        navigation.reset({\r\n            index:0,\r\n            routes:[{name:\"PainelControle\"}],\r\n        });\r\n    }\r\n return (\r\n   <View style={styles.container}>\r\n      < Animatable.View animation=\"fadeInLeft\"  style={styles.viewTitle}>\r\n           <Text style={styles.title}>Aplicar Testes</Text>\r\n       </Animatable.View>\r\n\r\n       <Text style={styles.txtEscolha}>Escolha um aluno para avaliar </Text>\r\n\r\n       <Animatable.View animation=\"zoomIn\" style={styles.viewFlatList}>\r\n           <FlatList\r\n           data={nomeRecebido}\r\n           renderItem={ ({item}) => \r\n           <View style={styles.viewFlat}>\r\n               \r\n               <TouchableOpacity style={(item.avaliado == true)? styles.btnFlatAvaliado : styles.btnFlat} onPress={() => chamaModal(item.alunoReferencia,item.avaliado)}>\r\n               \r\n               <Text style={styles.txtFlat}>{item.nome}</Text>\r\n               </TouchableOpacity>\r\n           </View>\r\n           }\r\n          keyExtractor={(item) => item.nome}\r\n           \r\n           />\r\n       </Animatable.View>\r\n\r\n      <Animatable.View animation=\"zoomIn\" style={styles.viewBtn}>\r\n           <TouchableOpacity style={styles.btnIniciar} onPress={() => navigation.navigate(\"InserirAluno\", {inserirTrue : inser})}>\r\n             <Text style={styles.btnIniciarTxt}>Editar Grupo</Text>\r\n           </TouchableOpacity>\r\n       </Animatable.View>\r\n\r\n       <Animatable.View animation=\"zoomIn\" style={styles.viewBtn2}>\r\n           <TouchableOpacity style={styles.btnIniciar} onPress={() => resetVariavel()}>\r\n             <Text style={styles.btnIniciarTxt}>Inicio</Text>\r\n           </TouchableOpacity>\r\n        </Animatable.View> \r\n\r\n       {/*Modal que exibe um tutorial simples do teste a seguir*/}\r\n       <Modal animationType='slide' visible={visivel}>\r\n           <View style={styles.container}>\r\n              <AppIntroSlider\r\n               renderItem={renderSliders}\r\n               data={slider}\r\n               activeDotStyle={{\r\n                   backgroundColor:'#fff',\r\n                   width:30\r\n               }}\r\n               renderNextButton={() => {}}\r\n               renderDoneButton={() => {}}\r\n               \r\n              />\r\n\r\n              \r\n           </View>\r\n       </Modal>\r\n\r\n\r\n   </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        backgroundColor:'#38a69d',\r\n       },\r\n    viewTitle:{\r\n        flex:1,\r\n        marginTop:'10%',\r\n        alignItems:'center'\r\n       \r\n    },\r\n    title:{\r\n        fontSize:28,\r\n        fontWeight:'bold',\r\n        color:'#fff'\r\n    },\r\n    viewFlatList:{\r\n        flex:4,\r\n        margin:'5%',\r\n        backgroundColor:'#fff',\r\n        borderRadius:10,\r\n        marginBottom:\"10%\"\r\n    },\r\n    viewBtn:{\r\n        flex:1,\r\n        alignItems:'center',\r\n        marginBottom:-25\r\n    },\r\n    viewBtn2:{\r\n        flex:1,\r\n        alignItems:'center',\r\n        \r\n    },\r\n    btnIniciar:{\r\n        backgroundColor:'#fff',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        width:'90%',\r\n        height:40,\r\n        borderRadius:10\r\n    },\r\n    btnIniciarTxt:{\r\n        fontSize:18,\r\n        fontWeight:'bold',\r\n        color:'#38a69d'\r\n    },\r\n    txtEscolha:{\r\n        textAlign:'center',\r\n        fontSize:14,\r\n        fontWeight:'bold',\r\n        color:'#fff',\r\n        marginBottom:-10\r\n    },\r\n    viewFlat:{\r\n       justifyContent:'center',\r\n       alignItems:'center'\r\n    },\r\n    txtFlat:{\r\n        \r\n        fontSize: 16,\r\n        fontWeight:'bold'\r\n    },\r\n    btnFlat:{\r\n        borderWidth:1,\r\n        width: \"85%\",\r\n        height: 30,\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        marginTop:15,\r\n        borderRadius:15\r\n    },\r\n    btnFlatAvaliado:{\r\n        borderWidth:1,\r\n        width: \"85%\",\r\n        height: 30,\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        marginTop:15,\r\n        borderRadius:15,\r\n        backgroundColor: 'green'\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}