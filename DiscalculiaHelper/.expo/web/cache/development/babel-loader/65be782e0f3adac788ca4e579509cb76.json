{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as Animatable from 'react-native-animatable';\nimport { useNavigation } from '@react-navigation/native';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from \"../../../BancoNoSql/conexaoFirebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignUp() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      passwordConf = _useState6[0],\n      setPasswordConf = _useState6[1];\n\n  var navigation = useNavigation();\n\n  function erro(er) {\n    if (er == er) {\n      alert(\"Esse E-mail ja existe \");\n    }\n  }\n\n  function CriarConta() {\n    return _regeneratorRuntime.async(function CriarConta$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(password == passwordConf)) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(createUserWithEmailAndPassword(auth, email, password).then(function (value) {\n              alert('cadastrado com sucesso');\n              console.log(\"uid: \" + value.user.uid);\n            }).catch(function (error) {\n              console.log(error);\n              erro(error);\n            }));\n\n          case 3:\n            setEmail('');\n            setPassword('');\n            setPasswordConf('');\n            _context.next = 11;\n            break;\n\n          case 8:\n            alert(\"As senhas devem ser iguais\");\n            setPassword('');\n            setPasswordConf('');\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Animatable.View, {\n      animation: \"fadeInLeft\",\n      delay: 500,\n      style: styles.containerHeader,\n      children: _jsx(Text, {\n        style: styles.message,\n        children: \"Cadatro\"\n      })\n    }), _jsxs(Animatable.View, {\n      animation: \"fadeInUp\",\n      style: styles.containerForm,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"E-mail\"\n      }), _jsx(TextInput, {\n        placeholder: \"Digite seu E-mail\",\n        value: email,\n        onChangeText: function onChangeText(value) {\n          return setEmail(value);\n        },\n        style: styles.input\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Senha\"\n      }), _jsx(TextInput, {\n        value: password,\n        onChangeText: function onChangeText(value) {\n          return setPassword(value);\n        },\n        style: styles.input,\n        placeholder: \"Digite sua senha\"\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Repetir Senha\"\n      }), _jsx(TextInput, {\n        value: passwordConf,\n        onChangeText: function onChangeText(value) {\n          return setPasswordConf(value);\n        },\n        style: styles.input,\n        placeholder: \"Digite sua senha\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return CriarConta();\n        },\n        children: _jsx(Text, {\n          style: styles.buttonTxt,\n          children: \"Cadastrar\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonRegister,\n        onPress: function onPress() {\n          return navigation.navigate('SignIn');\n        },\n        children: _jsx(Text, {\n          style: styles.registerTxt,\n          children: \"Ja possui uma conta? Entrar\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#38a69d'\n  },\n  containerHeader: {\n    marginTop: '14%',\n    marginBottom: '8%',\n    paddingStart: \"5%\"\n  },\n  message: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  containerForm: {\n    flex: 1,\n    backgroundColor: '#fff',\n    borderTopLeftRadius: 25,\n    borderTopRightRadius: 25,\n    paddingStart: '5%',\n    paddingEnd: '5%'\n  },\n  title: {\n    fontSize: 20,\n    marginTop: 28\n  },\n  input: {\n    borderBottomWidth: 1,\n    height: 40,\n    marginBottom: 12,\n    fontSize: 16\n  },\n  button: {\n    backgroundColor: '#38a69d',\n    width: '100%',\n    borderRadius: 5,\n    paddingVertical: 8,\n    marginTop: 14,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonTxt: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  buttonRegister: {\n    marginTop: 14,\n    alignSelf: 'center'\n  },\n  registerTxt: {\n    color: '#a1a1a1'\n  }\n});","map":{"version":3,"sources":["C:/Users/Usu√°rio/Documents/megak/TCCreact-native/DiscalculiaHelper/src/pages/Loguin/SignUp/index.js"],"names":["React","useState","Animatable","useNavigation","createUserWithEmailAndPassword","auth","SignUp","email","setEmail","password","setPassword","passwordConf","setPasswordConf","navigation","erro","er","alert","CriarConta","then","value","console","log","user","uid","catch","error","styles","container","containerHeader","message","containerForm","title","input","button","buttonTxt","buttonRegister","navigate","registerTxt","StyleSheet","create","flex","backgroundColor","marginTop","marginBottom","paddingStart","fontSize","fontWeight","color","borderTopLeftRadius","borderTopRightRadius","paddingEnd","borderBottomWidth","height","width","borderRadius","paddingVertical","justifyContent","alignItems","alignSelf"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport { View, Text,StyleSheet, TextInput, TouchableOpacity } from 'react-native';\r\n\r\nimport * as Animatable from 'react-native-animatable';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport {createUserWithEmailAndPassword} from 'firebase/auth';\r\nimport { auth } from '../../../BancoNoSql/conexaoFirebase';\r\n\r\n\r\nexport default function SignUp() {\r\n  const [email, setEmail] = useState('');\r\n  const [ password, setPassword] = useState('');\r\n  const [ passwordConf, setPasswordConf] = useState('');\r\n\r\n  const navigation = useNavigation();\r\n\r\n  function erro (er){\r\n    if(er == er){\r\n       alert(\"Esse E-mail ja existe \");\r\n    }\r\n   }\r\n\r\n   async function CriarConta(){\r\n     if(password == passwordConf){\r\n       await createUserWithEmailAndPassword(auth, email,password)\r\n       .then(value => {\r\n           alert('cadastrado com sucesso');\r\n           console.log(\"uid: \"+ value.user.uid);\r\n       })\r\n       .catch(error => {\r\n           console.log(error);\r\n           erro(error)}\r\n           );\r\n       \r\n      setEmail('');\r\n      setPassword('');\r\n      setPasswordConf('');\r\n   }else{\r\n     alert(\"As senhas devem ser iguais\");\r\n     setPassword('');\r\n     setPasswordConf('');\r\n   }\r\n  }\r\n return (\r\n   <View style={styles.container}>\r\n       <Animatable.View animation=\"fadeInLeft\" delay={500}\r\n        style={styles.containerHeader}\r\n       >\r\n           <Text style={styles.message}>Cadatro</Text>\r\n       </Animatable.View >\r\n\r\n       <Animatable.View animation=\"fadeInUp\" style={styles.containerForm}>\r\n           <Text style={styles.title}>E-mail</Text>\r\n           <TextInput\r\n            placeholder='Digite seu E-mail'\r\n            value={email}\r\n            onChangeText={(value) => setEmail(value)}\r\n            style={styles.input}\r\n           />\r\n           <Text style={styles.title}>Senha</Text>\r\n           <TextInput\r\n            value={password}\r\n            onChangeText={(value) => setPassword(value)}\r\n            style={styles.input}\r\n            placeholder='Digite sua senha'\r\n           />\r\n           <Text style={styles.title}>Repetir Senha</Text>\r\n           <TextInput\r\n            value={passwordConf}\r\n            onChangeText={(value) => setPasswordConf(value)}\r\n            style={styles.input}\r\n            placeholder='Digite sua senha'\r\n           />\r\n\r\n           <TouchableOpacity style={styles.button}\r\n            onPress={() => CriarConta()}\r\n           >\r\n             <Text style={styles.buttonTxt}>Cadastrar</Text>\r\n           </TouchableOpacity>\r\n\r\n           <TouchableOpacity style={styles.buttonRegister} onPress={() => navigation.navigate('SignIn')}>\r\n             <Text style={styles.registerTxt}>Ja possui uma conta? Entrar</Text>\r\n           </TouchableOpacity>\r\n       </Animatable.View>\r\n   </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container:{\r\n  flex:1,\r\n  backgroundColor:'#38a69d',\r\n\r\n  },\r\n  containerHeader:{\r\n    marginTop:'14%',\r\n    marginBottom:'8%',\r\n    paddingStart:\"5%\",\r\n  },\r\n  message:{\r\n    fontSize:28,\r\n    fontWeight:'bold',\r\n    color:'#fff'\r\n  },\r\n  containerForm:{\r\n    flex:1,\r\n    backgroundColor:'#fff',\r\n    borderTopLeftRadius:25,\r\n    borderTopRightRadius:25,\r\n    paddingStart:'5%',\r\n    paddingEnd:'5%'\r\n  },\r\n  title:{\r\n    fontSize:20,\r\n    marginTop:28,\r\n\r\n  },\r\n  input:{\r\n    borderBottomWidth:1,\r\n    height:40,\r\n    marginBottom:12,\r\n    fontSize:16,\r\n  },\r\n  button:{\r\n    backgroundColor:'#38a69d',\r\n    width:'100%',\r\n    borderRadius:5,\r\n    paddingVertical: 8,\r\n    marginTop:14,\r\n    justifyContent:'center',\r\n    alignItems:'center'\r\n  },\r\n  buttonTxt:{\r\n    color:'#fff',\r\n    fontSize:18,\r\n    fontWeight:'bold'\r\n  },\r\n  buttonRegister:{\r\n    marginTop:14,\r\n    alignSelf:'center'\r\n  },\r\n  registerTxt:{\r\n    color:'#a1a1a1'\r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}